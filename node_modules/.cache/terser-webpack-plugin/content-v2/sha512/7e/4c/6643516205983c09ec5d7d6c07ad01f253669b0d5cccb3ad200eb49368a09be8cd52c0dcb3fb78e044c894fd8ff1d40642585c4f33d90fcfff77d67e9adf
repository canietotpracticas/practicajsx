{"map":"{\"version\":3,\"sources\":[\"/home/ubuntu/workspace/practicajsx/src/Color.js\",\"/home/ubuntu/workspace/practicajsx/src/index.js\"],\"names\":[\"colors\",\"randomColor\",\"Math\",\"floor\",\"random\",\"length\",\"Color\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"color\",\"setNewColor\",\"bind\",\"assertThisInitialized\",\"newColor\",\"setState\",\"react_default\",\"a\",\"createElement\",\"style\",\"backgroundColor\",\"onClick\",\"Component\",\"App\",\"src_Color\",\"render\",\"src_App\",\"document\",\"getElementById\"],\"mappings\":\"qKAGMA,EAAO,CAAC,UAAU,UAAU,UAAU,UAAU,WAGhDC,EAAc,WAChB,OAAOD,EAAOE,KAAKC,MAAMD,KAAKE,SAASJ,EAAOK,QAAQ,IAoC3CC,cA3BX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,CACPC,MAAMf,KAEVO,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IALLA,6EASd,IAAMY,EAAWnB,IACjBU,KAAKU,SAAS,CACVL,MAAOI,qCAKX,OACIE,EAAAC,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAACC,gBAAgBf,KAAKI,MAAMC,QACpCM,EAAAC,EAAAC,cAAA,SAAA,CAAQG,QAAWhB,KAAKM,aAAxB,yBApBIW,EAAAA,WCVdC,mLAEE,OACIP,EAAAC,EAAAC,cAACM,EAAD,aAHMF,EAAAA,WAQlBG,OAAAA,EAAAA,OAAAA,CAAOT,EAAAC,EAAAC,cAACQ,EAAD,MAAOC,SAASC,eAAe\",\"sourcesContent\":[\"import React, {Component} from 'react';\\n\\n//este arreglo es JS normal\\nconst colors=[\\\"#FF0033\\\",\\\"#43D51C\\\",\\\"#1C73D5\\\",\\\"#D4B487\\\",\\\"#920238\\\"];\\n\\n//Esta funcion flecha tambien lo es\\nconst randomColor = () => {\\n    return colors[Math.floor(Math.random()*colors.length)+1];\\n}\\n/*\\nesta clase extiende Component, por lo que hace uso de JSX y React.\\nSin embargo, interactua con la funcion definida previamente \\nsin problema.\\n*/\\nclass Color extends Component{\\n\\n    constructor(props){\\n        super(props);\\n        this.state={\\n            color:randomColor()\\n        }\\n        this.setNewColor = this.setNewColor.bind(this);\\n    }\\n    \\n    setNewColor(){\\n        const newColor = randomColor();\\n        this.setState({\\n            color: newColor\\n        })\\n    }\\n        \\n    render(){\\n        return(\\n            <div style={{backgroundColor:this.state.color}}>\\n                <button onClick = {this.setNewColor}>\\n                    Color al azar\\n                </button>\\n            </div>  \\n        );\\n    }\\n}\\n/*En este archivo no renderizamos, solamente exportamos\\nel componente.*/\\nexport default Color;\",\"import React, {Component} from 'react';\\nimport {render} from 'react-dom';\\nimport Color from \\\"./Color\\\";\\n\\nclass App extends Component{\\n    render(){\\n        return(\\n            <Color/>   \\n        );\\n    }\\n}\\n\\nrender(<App/>,document.getElementById('root'));\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(t,e,n){\"use strict\";n.r(e);var o=n(1),r=n(2),a=n(5),c=n(4),l=n(6),u=n(0),i=n.n(u),s=n(8),b=n(3),h=[\"#FF0033\",\"#43D51C\",\"#1C73D5\",\"#D4B487\",\"#920238\"],j=function(){return h[Math.floor(Math.random()*h.length)+1]},O=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(a.a)(this,Object(c.a)(e).call(this,t))).state={color:j()},n.setNewColor=n.setNewColor.bind(Object(b.a)(n)),n}return Object(l.a)(e,t),Object(r.a)(e,[{key:\"setNewColor\",value:function(){var t=j();this.setState({color:t})}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{style:{backgroundColor:this.state.color}},i.a.createElement(\"button\",{onClick:this.setNewColor},\"Color al azar\"))}}]),e}(u.Component),d=function(t){function e(){return Object(o.a)(this,e),Object(a.a)(this,Object(c.a)(e).apply(this,arguments))}return Object(l.a)(e,t),Object(r.a)(e,[{key:\"render\",value:function(){return i.a.createElement(O,null)}}]),e}(u.Component);Object(s.render)(i.a.createElement(d,null),document.getElementById(\"root\"))},9:function(t,e,n){t.exports=n(15)}},[[9,1,2]]]);","extractedComments":[]}